# Helm chart values
grafana:
  persistence:
    enabled: true
    size: 10Gi
    inMemory:
      enabled: false
prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
  additionalServiceMonitors:
    - name: "istiod"
      additionalLabels:
        monitor: "istio-control-plane"
      jobLabel: "istio"
      selector:
        matchLabels:
          app: "istiod"
      namespaceSelector:
        matchNames:
          - "istio-system"
      endpoints:
      - port: "http-monitoring"  # Make sure this is the port exposed by your Istio services for monitoring.
        interval: "15s"
        path: "/metrics"  # Update if Istio exposes metrics on a different path.
        scheme: "http"
        tlsConfig:
          insecureSkipVerify: true
      targetLabels:
        - "app"
        - "release"
      podTargetLabels:
        - "app"
        - "release"
    - name: "istio-workload-metrics"
      additionalLabels:
        monitor: "istio-mesh"
      jobLabel: "envoy-stats"
      selector:
        matchExpressions:
          - key: "security.istio.io/tlsMode"
            operator: "Exists"
          - key: "prometheus.io/scrape"
            operator: "In"
            values: ["true"]
      namespaceSelector:
        any: true
      targetLabels:
        - "app"
      podTargetLabels:
        - "app"
      endpoints:
        - port: "15020"  # Ensure this matches the port exposed by your Istio sidecars.
          interval: "15s"
          path: "/stats/prometheus"
          scheme: "http"
          # relabelings:
          #   - sourceLabels: [__meta_kubernetes_namespace]
          #     targetLabel: namespace
          #   - sourceLabels: [__meta_kubernetes_pod_name]
          #     targetLabel: pod_name
          #   - action: labelmap
          #     regex: __meta_kubernetes_pod_label_(.+)